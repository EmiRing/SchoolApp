// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApp.Models;

namespace SchoolApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210613183509_AddedStudents")]
    partial class AddedStudents
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesCourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourseId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("SchoolApp.Models.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AssignmentId");

                    b.HasIndex("CourseId");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            CourseId = 5,
                            Description = "Write a short song in a rock theme",
                            Title = "Compose a rock song"
                        },
                        new
                        {
                            AssignmentId = 2,
                            CourseId = 5,
                            Description = "Spend at least 2h practising piano",
                            Title = "Practise piano"
                        },
                        new
                        {
                            AssignmentId = 3,
                            CourseId = 1,
                            Description = "Do five pages in the math book related to multiplication",
                            Title = "Multiplication"
                        },
                        new
                        {
                            AssignmentId = 4,
                            CourseId = 4,
                            Description = "Write a code that calculates the basic operations",
                            Title = "Calculator"
                        });
                });

            modelBuilder.Entity("SchoolApp.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "Math",
                            TeacherId = 3
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "Chemistry",
                            TeacherId = 3
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "Social Science",
                            TeacherId = 2
                        },
                        new
                        {
                            CourseId = 4,
                            CourseName = "Programming",
                            TeacherId = 2
                        },
                        new
                        {
                            CourseId = 5,
                            CourseName = "Music",
                            TeacherId = 1
                        });
                });

            modelBuilder.Entity("SchoolApp.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Kalle",
                            LastName = "Bäck"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jenny",
                            LastName = "Krona"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Stig",
                            LastName = "Ros"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Anna",
                            LastName = "Krook"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Kalle",
                            LastName = "Martinsson"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Markus",
                            LastName = "Stenson"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Svea",
                            LastName = "Nilsson"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Maria",
                            LastName = "Torp"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Frida",
                            LastName = "Truls"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Dennis",
                            LastName = "Fräck"
                        });
                });

            modelBuilder.Entity("SchoolApp.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jimi",
                            LastName = "Hendrix"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Bill",
                            LastName = "Gates"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Marie",
                            LastName = "Curie"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("SchoolApp.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolApp.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolApp.Models.Assignment", b =>
                {
                    b.HasOne("SchoolApp.Models.Course", "Course")
                        .WithMany("Assignments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("SchoolApp.Models.Course", b =>
                {
                    b.HasOne("SchoolApp.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SchoolApp.Models.Course", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("SchoolApp.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
